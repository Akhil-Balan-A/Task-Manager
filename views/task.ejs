<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="icon" href="/images/favicon_image_for_chrom_page.jpeg">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Task List</h1>

        <!-- Search Form -->
        <form action="/" method="GET" class="mb-4">
            <div class="input-group">
                <input type="text" name="search" class="form-control" placeholder="Search tasks" value="<%= searchQuery %>" aria-label="Search tasks">
                <div class="input-group-append">
                    <button class="btn btn-secondary" type="submit">Search</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="clearSearch()">Clear</button>
                </div>
            </div>
        </form>

        <!-- Task Creation Form -->
        <form action="/tasks" method="POST" class="mb-4">
            <div class="input-group">
                <input type="text" name="description" class="form-control" placeholder="New task description" required>
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Add Task</button>
                </div>
            </div>
        </form>

        <!-- Task Table -->
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>SL.No</th>
                    <th>Date</th>
                    <th style="width: 650px;">Task Description</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% if (tasks.length === 0) { %>
                    <tr>
                        <td colspan="5" class="text-center">No tasks found. Please add a task.</td>
                    </tr>
                <% } else { %>
                    <% tasks.forEach((task, index) => { %>
                        <tr>
                            <td><%= (currentPage - 1) * 3 + (index + 1) %></td>
                            <td><%= task.date.toDateString() %></td>
                            <td><%= task.description %></td>
                            <td>
                                <form action="/tasks/<%= task._id %>?_method=PUT" method="POST" class="d-inline">
                                    <select name="status" class="custom-select status-select" onchange="this.form.submit(); updateSelectColor(this)">
                                        <option value="Pending" <%= task.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="Completed" <%= task.status === 'Completed' ? 'selected' : '' %>>Completed</option>
                                    </select>
                                </form>
                            </td>
                            <td>
                                <!-- Edit Task Button -->
                                 <div class="d-flex justify-content-between mt-3">
                                    <button class="btn btn-warning" style="width: 70px;" onclick="editTaskDescription('<%= task._id %>', '<%= task.description %>')">Edit</button>
                                </div>
                                 <br>
                                <form action="/tasks/<%= task._id %>?_method=DELETE" method="POST" class="d-inline">
                                    <button class="btn btn-danger" type="submit">Delete</button>
                                </form>
                            </td>
                        </tr>
                    <% }) %>
                <% } %>
            </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="/?page=<%= currentPage - 1 %>&search=<%= searchQuery %>">Previous</a>
                    </li>
                <% } %>
        
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="/?page=<%= i %>&search=<%= searchQuery %>"><%= i %></a>
                    </li>
                <% } %>
        
                <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                        <a class="page-link" href="/?page=<%= currentPage + 1 %>&search=<%= searchQuery %>">Next</a>
                    </li>
                <% } %>
            </ul>
        </nav>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Check URL query parameters for task actions and show corresponding alerts
        const urlParams = new URLSearchParams(window.location.search);

        if (urlParams.has('task_added')) {
            Swal.fire({
                title: 'Success!',
                text: 'Task added successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }

        if (urlParams.has('task_updated')) {
            Swal.fire({
                title: 'Success!',
                text: 'Task status updated successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }

        if (urlParams.has('task_deleted')) {
            Swal.fire({
                title: 'Deleted!',
                text: 'Task deleted successfully!',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
        }

        if (urlParams.has('task_description_updated')) {
            Swal.fire({
                title: 'Updated!',
                text: 'Task description updated successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }
    </script>
   <script>
    // Function to trigger SweetAlert for editing a task description
    function editTaskDescription(taskId, currentDescription) {
        Swal.fire({
            title: 'Edit Task Description',
            input: 'text',
            inputValue: currentDescription, // Pre-fill the input with the current description
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Update',
            showLoaderOnConfirm: true,
            preConfirm: async (newDescription) => {
                if (!newDescription) {
                    Swal.showValidationMessage('You must enter a description!');
                    return;
                }
                try {
                    const response = await fetch(`/tasks/${taskId}/description`, {
                        method: 'PUT', // Use PUT to update the task description
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ description: newDescription }) // Send new description
                    });
                    if (!response.ok) {
                        return Swal.showValidationMessage('Failed to update description.');
                    }
                    return response.json();
                } catch (error) {
                    Swal.showValidationMessage(`Request failed: ${error}`);
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title: 'Updated!',
                    text: 'Task description updated successfully!',
                    icon: 'success'
                });
                
                // Optionally, update the task description in the DOM without reloading
                const taskRow = document.querySelector(`[data-task-id="${taskId}"]`);
                if (taskRow) {
                    taskRow.querySelector('.task-description').textContent = newDescription; // Update the description
                }
            }
        });
    }
</script>

    
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <script>
        function clearSearch() {
            document.querySelector('input[name="search"]').value = '';
            document.querySelector('form').submit(); // Submit the form to refresh the page
        }
        function updateSelectColor(selectElement) {
            if (selectElement.value === "Pending") {
                selectElement.style.color = "red";
            } else if (selectElement.value === "Completed") {
                selectElement.style.color = "green";
            }
        }

            // Initial setup to set the color when the page loads
            document.querySelectorAll('.status-select').forEach(select => {
            updateSelectColor(select);
        });
    </script>
</body>
</html>
